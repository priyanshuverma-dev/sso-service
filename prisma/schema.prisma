// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String    @default("User")
  email          String    @unique
  hashedPassword String
  updatedAt      DateTime  @updatedAt
  createdAt      DateTime  @default(now())
  sessions       Session[]
  sites          Site[]

  @@map("Users")
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  session   String
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Sessions")
}

model Site {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  url          String
  clientId     String   @unique @map("client_id")
  clientSecret String   @map("client_secret")
  siteUrl      String[] @map("site_url")
  callbackUrl  String[] @map("callback_url")
  scope        String   @default("read:user user:email")
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  state     String   @unique
  userId    String
  email     String
  expires   DateTime
  updatedAt DateTime @default(now())
}

model SSOToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  clientId   String
  scope      String
  identifier String   @unique
  expires    DateTime
  updatedAt  DateTime @default(now())

  @@map("SSOtokens")
}
